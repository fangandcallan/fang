{
  "hash": "fc1e6c2782bd88a490da5de75f496ff2",
  "result": {
    "markdown": "---\ntitle: \"Challenge-5\"\nauthor: \"Insert your name here\"\ndate: \"2023-10-16\"\noutput: html_document\n---\n\n\n\n\n## Questions\n<br>\n\n#### Question-1: Local Variable Shadowing \n\nCreate an R function that defines a global variable called `x` with a value of 5. Inside the function, declare a local variable also named `x` with a value of 10. Print the value of `x` both inside and outside the function to demonstrate shadowing.\n\n**Solutions:**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- 5\nshadowing <- function() {\n  x <- 10\n  print(paste(\"Inside the function is\", x))}\n\nshadowing()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Inside the function is 10\"\n```\n:::\n\n```{.r .cell-code}\nprint(paste(\"Outside the function is\", x))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Outside the function is 5\"\n```\n:::\n:::\n\n<br>\n\n#### Question-2: Modify Global Variable\n\nCreate an R function that takes an argument and adds it to a global variable called `total`. Call the function multiple times with different arguments to accumulate the values in `total`.\n\n**Solutions:**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntotal <- 0\n\nadd_to_total <- function(value) {\n  total <- total + value\n  return(total)\n}\n\ntotal <- add_to_total(3)\ntotal <- add_to_total(10)\ntotal <- add_to_total(7)\n\ntotal\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 20\n```\n:::\n:::\n\n<br>\n\n#### Question-3: Global and Local Interaction \n\nWrite an R program that includes a global variable `total` with an initial value of 100. Create a function that takes an argument, adds it to `total`, and returns the updated `total`. Demonstrate how this function interacts with the global variable.\n\n**Solutions:**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntotal <- 100\n\nadd_to_total <- function(value) {\n  total <<- total + value\n  return(total)\n}\n\n# Demonstrate how the function interacts with the global variable\nprint(paste(\"Initial total is\", total))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Initial total is 100\"\n```\n:::\n\n```{.r .cell-code}\nnew_total <- add_to_total(50)\nprint(paste(\"After adding 50 is\", new_total))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"After adding 50 is 150\"\n```\n:::\n\n```{.r .cell-code}\nnew_total <- add_to_total(30)\nprint(paste(\"After adding 30 is\", new_total))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"After adding 30 is 180\"\n```\n:::\n\n```{.r .cell-code}\nprint(paste(\"Global total after function calls is\", total))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Global total after function calls is 180\"\n```\n:::\n:::\n\n<br>\n\n#### Question-4: Nested Functions\n\nDefine a function `outer_function` that declares a local variable `x` with a value of 5. Inside `outer_function`, define another function `inner_function` that prints the value of `x`. Call both functions to show how the inner function accesses the variable from the outer function's scope.\n\n**Solutions:**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nouter_function <- function() {\n  x <- 5\n\n  inner_function <- function() {\n    print(paste(\"Inner function shows outer:\", x))\n  }\n  \n  inner_function()\n}\n\nouter_function()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Inner function shows outer: 5\"\n```\n:::\n:::\n\n<br>\n\n#### Question-5: Meme Generator Function\n\nCreate a function that takes a text input and generates a humorous meme with the text overlaid on an image of your choice. You can use the `magick` package for image manipulation. You can find more details about the commands offered by the package, with some examples of annotating images here: https://cran.r-project.org/web/packages/magick/vignettes/intro.html\n\n**Solutions:**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(magick)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLinking to ImageMagick 6.9.12.93\nEnabled features: cairo, freetype, fftw, ghostscript, heic, lcms, pango, raw, rsvg, webp\nDisabled features: fontconfig, x11\n```\n:::\n\n```{.r .cell-code}\nimage <- image_read(\"10yhq0.jpg\")\n\n  text <- \"LOL\"\nfont <- \"Arial-Bold\"\nsize <- 50\ncolor <- \"white\"\nposition <- \"+100+100\"\n\nimage <- image_annotate(image, text, size = size, color = color, location = position)\n\nimage_write(image, path = \"output_meme.jpg\")\n\nimage\n```\n\n::: {.cell-output-display}\n![](Challenge-5_files/figure-html/unnamed-chunk-5-1.png)\n:::\n:::\n\n<br>\n\n#### Question-6: Text Analysis Game  \n\nDevelop a text analysis game in which the user inputs a sentence, and the R function provides statistics like the number of words, characters, and average word length. Reward the user with a \"communication skill level\" based on their input.\n\n**Solutions:**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Function to analyze the user's input and provide statistics and communication skill level\nanalyze_text_game <- function() {\n  message(\"Y u wanna play???\")\n  message(\"Anyhow, enter a word, may the longest win.\")\n  \n  user_input <- readline(prompt = \"Enter here\")\n  \n  words <- unlist(strsplit(user_input, \" \"))\n  \n  num_characters <- nchar(user_input)\n  num_words <- length(words)\n  average_word_length <- num_characters / num_words\n  \n  skill_level <- ifelse(\n    average_word_length < 4,\n    \"BOOOO\",\n    ifelse(\n      average_word_length < 6,\n      \"Ok ba\",\n      \"Not bad!!\"\n    )\n  )\n  \n  message(\"\\nStatistics:\")\n  message(\"Number of characters:\", num_characters)\n  message(\"Number of words:\", num_words)\n  message(\"Average word length:\", round(average_word_length, 2))\n  \n  message(\"\\nCommunication Skill Level:\", skill_level)\n}\n\nanalyze_text_game()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nY u wanna play???\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nAnyhow, enter a word, may the longest win.\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nEnter here\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nStatistics:\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nNumber of characters:0\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nNumber of words:0\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nAverage word length:NaN\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nCommunication Skill Level:NA\n```\n:::\n:::\n\n<br>",
    "supporting": [
      "Challenge-5_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}