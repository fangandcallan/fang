"0","library(shiny)"
"0",""
"0","ui <- fluidPage("
"0","  titlePanel(""This is the choice between the living and the dead""), #Placed on top of the video to indicate its meaning"
"0","  tags$video("
"0","    controls = T,"
"0","    #autoplay = ""autoplay"","
"0","    src = ""Prologue.mp4"","
"0","    type = ""video/mp4"","
"0","    width = ""640"","
"0","    height = ""360"""
"0","  ), #Intro to the eyes and the aim: shut the eyes"
"0","  "
"0","  sidebarLayout("
"0","    sidebarPanel("
"0","      h3(""Select Eyes:""),"
"0","      radioButtons(""eyeColor"", """","
"0","                   choices = c(""Brown eyes"", ""Blue eyes"", ""Green eyes"")"
"0","      ),"
"0","    ), #Choosing eyes to interact with"
"0","    mainPanel("
"0","      h3(""Last Statement:""),"
"0","      textOutput(""lastStatement""),"
"0","      br(), #Display last statement to inform user of making choices"
"0","      actionButton(""closeEyes"", ""Close their eyes""),"
"0","      actionButton(""burnBody"", ""Condemn their body by burning them"")"
"0","    ) #Two actional ways to shut the eyes"
"0","  )"
"0",")"
"0",""
"0","server <- function(input, output, session) {"
"0","  merged_data <- read.csv(""merged_data.csv"")"
"0","  output$lastStatement <- renderText({"
"0","    eye_color <- switch(input$eyeColor,"
"0","      ""Brown eyes"" = ""Brown"","
"0","      ""Blue eyes"" = ""Blue"","
"0","      ""Green eyes"" = ""Green"""
"0","    ) #Linking variables based on eye color"
"0",""
"0","    if (eye_color == """") {"
"0","      last_statements <- merged_data$Last.Statement[is.na(merged_data$EyeColor)]"
"0","    } else {"
"0","      last_statements <- merged_data$Last.Statement[merged_data$EyeColor == eye_color]"
"0","    } # Linking last statements to eye color respectively"
"0",""
"0","    if (length(last_statements) == 0) {"
"0","      return(""This person has left no words."")"
"0","    } #in case there isn't a last word"
"0",""
"0","    random_statement <- sample(last_statements, 1)"
"0","    random_statement"
"0","  }) #display a random statement based on the choosen eye"
"0",""
"0","  # Initialize counters for both buttons"
"0","  closeEyesCount <- reactiveVal(0)"
"0","  burnBodyCount <- reactiveVal(0)"
"0",""
"0","  observeEvent(input$closeEyes, {"
"0","    # Increment the click count for ""Close their eyes"" button"
"0","    closeEyesCount(closeEyesCount() + 1)"
"0",""
"0","    # Check if the click count reaches 5"
"0","    if (closeEyesCount() == 3) {"
"0","      # Play the first video respective to ""Close their eyes"""
"0","      updateVideo(session, ""The Fight 1.mp4"")"
"0","    } #Forgiveness is hope"
"0","    if (closeEyesCount() == 5) {"
"0","      # Play the second video respective to ""Close their eyes"""
"0","      updateVideo(session, ""At the End of the World.mp4"") #Hope wins death"
"0","    }"
"0","  })"
"0",""
"0","  observeEvent(input$burnBody, {"
"0","    # Increment the click count for ""Condemn their body by burning them"" button"
"0","    burnBodyCount(burnBodyCount() + 1)"
"0",""
"0","    # Check if the click count reaches 3"
"0","    if (burnBodyCount() == 3) {"
"0","      # Play the first video respective to ""Condemn their body by burning them"""
"0","      updateVideo(session, ""The Fight 2.mp4"")"
"0","    } #Anger of fire"
"0","    if (burnBodyCount() == 5) {"
"0","      # Play the second video respective to ""Condemn their body by burning them"""
"0","      updateVideo(session, ""The Death.mp4"")"
"0","    } #Hate will backfire"
"0","  })"
"0","}"
"0",""
"0","shinyApp(ui, server)"
"2","
Listening on http://127.0.0.1:5156
"
