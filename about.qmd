---
title: "The Eyes You'll Shut Forever"
---

They are executed. But are they resting in peace?\

```{r}
library(shiny)

ui <- fluidPage(
  titlePanel("This is the choice between the living and the dead"), #Placed on top of the video to indicate its meaning
  tags$video(
    controls = T,
    #autoplay = "autoplay",
    src = "Prolouge.mp4",
    type = "video/mp4",
    width = "640",
    height = "360"
  ), #Intro to the eyes and the aim: shut the eyes
  
  sidebarLayout(
    sidebarPanel(
      h3("Select Eyes:"),
      radioButtons("eyeColor", "",
                   choices = c("Brown eyes", "Blue eyes", "Green eyes")
      ),
    ), #Choosing eyes to interact with
    mainPanel(
      h3("Last Statement:"),
      textOutput("lastStatement"),
      br(), #Display last statement to inform user of making choices
      actionButton("closeEyes", "Close their eyes"),
      actionButton("burnBody", "Condemn their body by burning them")
    ) #Two actional ways to shut the eyes
  )
)

server <- function(input, output, session) {
  merged_data <- read.csv("merged_data.csv")
  output$lastStatement <- renderText({
    eye_color <- switch(input$eyeColor,
      "Brown eyes" = "Brown",
      "Blue eyes" = "Blue",
      "Green eyes" = "Green"
    ) #Linking variables based on eye color

    if (eye_color == "") {
      last_statements <- merged_data$Last.Statement[is.na(merged_data$EyeColor)]
    } else {
      last_statements <- merged_data$Last.Statement[merged_data$EyeColor == eye_color]
    } # Linking last statements to eye color respectively

    if (length(last_statements) == 0) {
      return("This person has left no words.")
    } #in case there isn't a last word

    random_statement <- sample(last_statements, 1)
    random_statement
  }) #display a random statement based on the choosen eye

  # Initialize counters for both buttons
  closeEyesCount <- reactiveVal(0)
  burnBodyCount <- reactiveVal(0)

  observeEvent(input$closeEyes, {
    # Increment the click count for "Close their eyes" button
    closeEyesCount(closeEyesCount() + 1)

    # Check if the click count reaches 5
    if (closeEyesCount() == 3) {
      # Play the first video respective to "Close their eyes"
      updateVideo(session, "The Fight 1.mp4")
    } #Forgiveness is hope
    if (closeEyesCount() == 5) {
      # Play the second video respective to "Close their eyes"
      updateVideo(session, "At the End of the World.mp4") #Hope wins death
    }
  })

  observeEvent(input$burnBody, {
    # Increment the click count for "Condemn their body by burning them" button
    burnBodyCount(burnBodyCount() + 1)

    # Check if the click count reaches 3
    if (burnBodyCount() == 3) {
      # Play the first video respective to "Condemn their body by burning them"
      updateVideo(session, "The Fight 2.mp4")
    } #Anger of fire
    if (burnBodyCount() == 5) {
      # Play the second video respective to "Condemn their body by burning them"
      updateVideo(session, "The Death.mp4")
    } #Hate will backfire
  })
}

shinyApp(ui, server)




```

server \<- function(input, output, session) {

=

})

```{r}
library(shiny)

ui <- fluidPage(
  titlePanel("This is the choice between the living and the dead"),
  tags$video(
    controls = T,
    autoplay = T,
    src = "Prolouge.mp4",
    type = "video/mp4",
    width = "640",
    height = "360"
  )
)

server <- function(input, output, session) {

}

shinyApp(ui, server)



```
